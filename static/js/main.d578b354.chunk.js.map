{"version":3,"sources":["btwglogo.png","components/sendtext.js","components/makecall.js","components/home.js","components/contacts.js","components/chats.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SendText","state","text","recipient","textmessage","sendText","_","fetch","catch","err","console","log","setState","alert","this","style","width","margin","className","col","value","onChange","e","target","rows","backgroundColor","marginTop","raised","accent","onClick","Component","Device","require","MakeCall","call","makeCall","self","$","ajaxSetup","async","getJSON","done","data","setup","token","fail","logtext","disconnect","onPhone","ready","window","connect","number","endCall","disconnectAll","muteCall","status","muted","activeConnection","mute","marginRight","marginLeft","Home","props","activeTab","src","Logo","alt","active","tabId","ripple","toggleCategories","Contacts","icon","href","name","Chats","Main","exact","path","component","App","title","scroll","to","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","error","message"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,sC,yWCgE5BC,E,4MAzDXC,MAAQ,CAEJC,KAAM,CACFC,UAAW,GACXC,YAAa,K,EAMrBC,SAAW,SAAAC,GAAM,IAELJ,EAAS,EAAKD,MAAdC,KAERK,MAAM,+CAAD,OAAgDL,EAAKC,UAArD,wBAA8ED,EAAKE,cACvFI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE1B,EAAKG,SAAS,CAAEV,KAAK,eAAMA,EAAP,CAAaE,YAAa,GAAID,UAAW,OAC7DU,MAAM,gC,uDAMJ,IAAD,OAGGX,EAASY,KAAKb,MAAdC,KAER,OAEA,6BACI,yBAAKa,MAAO,CAAEC,MAAO,MAAOC,OAAQ,SAChC,kBAAC,OAAD,CAAMC,UAAU,aACZ,kBAAC,OAAD,CAAMC,IAAK,IACP,gCAAQ,oDACJ,6CACA,6BACJ,2BAAOC,MAAOlB,EAAKC,UACZkB,SAAU,SAAAC,GAAC,OAAI,EAAKV,SAAS,CAAEV,KAAK,eAAMA,EAAP,CAAaC,UAAWmB,EAAEC,OAAOH,aACnF,yBAAKF,UAAU,kBACb,4CACA,6BACA,8BAAUM,KAAM,GAAIJ,MAAOlB,EAAKE,YAAac,UAAU,YACrDG,SAAU,SAAAC,GAAC,OAAI,EAAKV,SAAS,CAAEV,KAAK,eAAMA,EAAP,CAAaE,YAAakB,EAAEC,OAAOH,aAC1E,8BACE,kBAAC,SAAD,CAAQL,MAAO,CAACU,gBAAgB,OAAQC,UAAU,QAASC,QAAM,EAACC,QAAM,EAACC,QAASf,KAAKT,UAAvF,uB,GAhDSyB,a,kCCGjBC,G,OAASC,EAAQ,KAAiBD,QAmHzBE,E,4MA5GXhC,MAAQ,CAEJiC,KAAM,CAEF/B,UAAW,K,EAMnBgC,SAAW,SAAA7B,GAIP,IAAI8B,EAAI,eAGRC,IAAEC,UAAU,CAACC,OAAM,IACnBF,IAAEG,QAAQ,mCAAmCC,MAAK,SAASC,GACvDX,EAAOY,MAAMD,EAAKE,UACjBC,MAAK,SAASpC,GACfC,QAAQC,IAAIF,GACZK,KAAKgC,QAAU,4CAEjBT,IAAEC,UAAU,CAACC,OAAM,IAdT,IAiBFL,EAAS,EAAKjC,MAAdiC,KAGRH,EAAOgB,YAAW,WAElBX,EAAKxB,SAAS,CACZoC,SAAS,EACTrC,IAAK,mBAIPoB,EAAOkB,OAAM,WACXC,OAAOd,KAAKzB,IAAM,eAIpBoB,EAAOoB,QAAQ,CAACC,OAAQ,KAAOlB,EAAK/B,YACpCO,QAAQC,IAAR,kBAAuBuB,EAAK/B,a,EAK9BkD,QAAU,SAAA/C,GAENyB,EAAOuB,iB,EAKfC,SAAW,SAAAjD,GAEP,GAAGyB,EAAOyB,OAAO,QAAS,CAClB,IAAIC,GAAS,EAAKxD,MAAMwD,MACxB,EAAK7C,SAAS,CAAC6C,MAAOA,IACtB1B,EAAO2B,mBAAmBC,KAAKF,K,uDAKrC,IAAD,OAGGvB,EAASpB,KAAKb,MAAdiC,KAEZ,OAEI,6BACI,yBAAKnB,MAAO,CAACC,MAAO,MAAOC,OAAQ,SACnC,kBAAC,OAAD,CAAMC,UAAU,aACZ,kBAAC,OAAD,CAAMC,IAAK,IAEX,gCAAQ,kDACI,kDACA,6BACJ,2BAAOC,MAAOc,EAAK/B,UACXkB,SAAU,SAAAC,GAAC,OAAI,EAAKV,SAAS,CAAEsB,KAAK,eAAMA,EAAP,CAAa/B,UAAWmB,EAAEC,OAAOH,aACxE,6BACV,kBAAC,SAAD,CAAQL,MAAO,CAACU,gBAAgB,OAAQC,UAAU,OAAQkC,YAAY,OAAQjC,QAAM,EAACC,QAAM,EAACC,QAASf,KAAKqB,UAA1G,cACA,kBAAC,SAAD,CAAQpB,MAAO,CAACU,gBAAgB,MAAOC,UAAU,OAAQmC,WAAW,OAAQlC,QAAM,EAACC,QAAM,EAACC,QAASf,KAAKuC,SAAxG,cACA,kBAAC,SAAD,CAAQtC,MAAO,CAACU,gBAAgB,SAAUC,UAAU,OAAQmC,WAAW,QAASlC,QAAM,EAACC,QAAM,EAACC,QAASf,KAAKyC,UAA5G,kB,GAzFSzB,aC0ERgC,E,kDA5EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACD9D,MAAQ,CAAC+D,UAAW,GAFV,E,+DASf,OAA4B,IAAzBlD,KAAKb,MAAM+D,UAIN,6BAAK,kBAAC,EAAD,OAMe,IAAzBlD,KAAKb,MAAM+D,UAIN,6BAAK,6BAAK,kBAAC,EAAD,QAMU,IAAzBlD,KAAKb,MAAM+D,UAIN,mDAJR,I,+BAYE,IAAD,OAIL,OAEA,6BACI,yBAAKjD,MAAQ,CAACC,MAAO,OAAQC,OAAQ,SACrC,kBAAC,OAAD,CAAMC,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,IACP,gCAAQ,yBAAK8C,IAAKC,IAAMC,IAAI,OAAOjD,UAAU,UAE7C,yBAAKA,UAAU,eACX,gCAAQ,+FAOpB,kBAAC,OAAD,CAAM8C,UAAWlD,KAAKb,MAAMmE,OAAQ/C,SAAU,SAACgD,GAAD,OAAW,EAAKzD,SAAS,CAACoD,UAAWK,KAASC,QAAM,GACtF,kBAAC,MAAD,oBACA,kBAAC,MAAD,oBACA,kBAAC,MAAD,wBAEJ,6BAASpD,UAAU,iBAAiBJ,KAAKyD,yB,GArEtCzC,aC+DJ0C,E,uKA9DX,OAEI,yBAAKzD,MAAQ,CAACC,MAAO,OAAQC,OAAQ,SACjC,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAME,IAAK,GACf,kBAAC,OAAD,KACI,kBAAC,WAAD,KACI,kBAAC,kBAAD,CAAiBsD,KAAK,UAAtB,eACA,kBAAC,iBAAD,KACI,uBAAGC,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,YAE3B,kBAAC,iBAAD,KACI,uBAAGD,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,eAG/B,kBAAC,WAAD,KACI,kBAAC,kBAAD,CAAiBF,KAAK,UAAtB,iBACA,kBAAC,iBAAD,KACI,uBAAGC,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,YAE3B,kBAAC,iBAAD,KACI,uBAAGD,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,eAG/B,kBAAC,WAAD,KACI,kBAAC,kBAAD,CAAiBF,KAAK,UAAtB,eACA,kBAAC,iBAAD,KACI,uBAAGC,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,YAE3B,kBAAC,iBAAD,KACI,uBAAGD,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,eAG/B,kBAAC,WAAD,KACI,kBAAC,kBAAD,CAAiBF,KAAK,UAAtB,kBACA,kBAAC,iBAAD,KACI,uBAAGC,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,YACV,kBAAC,iBAAD,KACb,uBAAGD,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,eAG/B,kBAAC,WAAD,KACI,kBAAC,kBAAD,CAAiBF,KAAK,UAAtB,kBACA,kBAAC,iBAAD,KACI,uBAAGC,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,YACV,kBAAC,iBAAD,KACb,uBAAGD,KAAK,KAAI,kBAAC,OAAD,CAAMC,KAAK,uB,GAlDxB7C,aCuBR8C,E,uKAnBX,OAGI,2D,GAPY9C,aCkBL+C,EAXF,kBAEb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWlB,IAC/C,kBAAC,IAAD,CAAOiB,KAAM,0BAA0BC,UAAWR,IAClD,kBAAC,IAAD,CAAOO,KAAM,uBAAuBC,UAAWJ,M,eCmBhCK,MA5Bf,WACE,OAEE,yBAAK/D,UAAU,oBACf,kBAAC,SAAD,KACG,kBAAC,SAAD,CAAQA,UAAU,eAAegE,MAAM,iBAAiBC,QAAM,GACzD,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMjE,UAAW,OAAOkE,GAAG,mBAA3B,QACA,kBAAC,IAAD,CAAMlE,UAAW,OAAOkE,GAAG,2BAA3B,YACA,kBAAC,IAAD,CAAMlE,UAAW,OAAOkE,GAAG,wBAA3B,WAGR,kBAAC,SAAD,CAAQlE,UAAU,cAAcgE,MAAM,kBAClC,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMhE,UAAW,OAAOkE,GAAG,mBAA3B,QACA,kBAAC,IAAD,CAAMlE,UAAW,OAAOkE,GAAG,2BAA3B,YACA,kBAAC,IAAD,CAAMlE,UAAW,OAAOkE,GAAG,wBAA3B,WAGR,kBAAC,UAAD,KACI,yBAAKlE,UAAU,iBACf,kBAAC,EAAD,UCfQmE,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2D,cCVNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAc7C,MACrB8C,MAAK,SAAAC,GACJA,EAAaC,gBAEdzF,OAAM,SAAA0F,GACLxF,QAAQwF,MAAMA,EAAMC,c","file":"static/js/main.d578b354.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/btwglogo.a0c00ef3.png\";","import React, { Component } from 'react';\r\nimport { Grid, Cell, Button } from 'react-mdl'\r\nimport Logo from '../btwglogo.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass SendText extends Component {\r\n\r\n    state = {\r\n\r\n        text: {\r\n            recipient: '',\r\n            textmessage: ''\r\n\r\n        }\r\n    }\r\n\r\n    //Function for Sending Text \r\n    sendText = _ => {\r\n\r\n        const { text } = this.state\r\n        //Sending message contents to server\r\n        fetch(`https://78e48148.ngrok.io/message?recipient=${text.recipient}&textmessage=${text.textmessage}`)\r\n        .catch(err => console.log(err))\r\n        //Setting form back to blank after message has sent\r\n        this.setState({ text: { ...text, textmessage: '', recipient: '' } })\r\n        alert('your message has been sent.')\r\n        \r\n\r\n    }\r\n\r\n\r\nrender() {\r\n\r\n\r\n    const { text } = this.state;       \r\n    \r\n    return(\r\n    \r\n    <div>  \r\n        <div style={{ width: '60%', margin: 'auto'}} >\r\n            <Grid className=\"text-grid\">\r\n                <Cell col={12}>\r\n                    <center><h2> Send Text Message </h2></center>\r\n                        <label> Send to: </label>\r\n                        <br />\r\n                    <input value={text.recipient}\r\n                           onChange={e => this.setState({ text: { ...text, recipient: e.target.value } })} />\r\n            <div className=\"message-label\" />\r\n              <label> Message </label>\r\n              <br />\r\n              <textarea rows={10} value={text.textmessage} className=\"text-area\"\r\n                onChange={e => this.setState({ text: { ...text, textmessage: e.target.value } })} />\r\n            <div/>\r\n              <Button style={{backgroundColor:'blue', marginTop:'10px'}} raised accent onClick={this.sendText}> Send Text </Button>\r\n              </Cell>\r\n            </Grid>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n    }\r\n\r\n}\r\n\r\nexport default SendText;","import React, { Component, useState, setState } from 'react';\r\nimport { Grid, Cell, Button, } from 'react-mdl'\r\nimport { Twilio, TwimlInterface, setup} from 'twilio';\r\nimport { findDOMNode } from 'react-dom';\r\nimport $ from 'jquery';\r\nimport { Dial } from 'twilio/lib/twiml/VoiceResponse';\r\n\r\n\r\nconst Device = require('twilio-client').Device;\r\n\r\nvar token;\r\n\r\nclass MakeCall extends Component {\r\n\r\n   \r\n    state = {\r\n\r\n        call: {\r\n\r\n            recipient: ''\r\n\r\n        }\r\n    }\r\n\r\n//Function for making call\r\n    makeCall = _ => {\r\n\r\n         \r\n        \r\n        var self = this;\r\n\r\n        //Getting token from /token route on server\r\n        $.ajaxSetup({async:false});\r\n        $.getJSON('https://78e48148.ngrok.io/token').done(function(data) {\r\n            Device.setup(data.token);\r\n          }).fail(function(err) {\r\n            console.log(err);\r\n            this.logtext = 'Could not fetch token, see console.log';\r\n          });\r\n          $.ajaxSetup({async:false});\r\n\r\n\r\n          const { call } = this.state\r\n        \r\n               \r\n          Device.disconnect(() => {\r\n            /* eslint-disable-next-line no-restricted-globals */\r\n          self.setState({\r\n            onPhone: false,\r\n            log: 'Call ended.'\r\n          });\r\n        })\r\n\r\n          Device.ready(() => {\r\n            window.self.log = 'Connected';\r\n          });\r\n\r\n          \r\n          Device.connect({number: '+1' + call.recipient});\r\n          console.log(`Calling ${call.recipient}`);\r\n        \r\n        }\r\n\r\n        //Function for ending call button\r\n        endCall = _  => {\r\n\r\n            Device.disconnectAll();\r\n\r\n        }\r\n\r\n    //Function for muting call\r\n    muteCall = _ => {\r\n      \r\n        if(Device.status(\"open\")) {\r\n                var muted = !this.state.muted;\r\n                this.setState({muted: muted});\r\n                Device.activeConnection().mute(muted);\r\n\r\n            }\r\n    }\r\n\r\nrender() {\r\n\r\n\r\n    const { call } = this.state;  \r\n\r\nreturn(\r\n\r\n    <div>\r\n        <div style={{width: '60%', margin: 'auto'}}>\r\n        <Grid className=\"call-grid\">\r\n            <Cell col={12}>\r\n\r\n            <center><h2> Make Phone Call </h2></center>\r\n                        <label> Phone Number: </label>\r\n                        <br />\r\n                    <input value={call.recipient}\r\n                            onChange={e => this.setState({ call: { ...call, recipient: e.target.value } })} />\r\n                        <br />\r\n              <Button style={{backgroundColor:'blue', marginTop:'10px', marginRight:'5px'}} raised accent onClick={this.makeCall}> Call Now </Button>\r\n              <Button style={{backgroundColor:'red', marginTop:'10px', marginLeft:'5px'}} raised accent onClick={this.endCall}> End Call </Button>\r\n              <Button style={{backgroundColor:'yellow', marginTop:'10px', marginLeft:'10px'}} raised accent onClick={this.muteCall}> Mute </Button>\r\n            </Cell>\r\n        </Grid>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        </div> \r\n    </div>\r\n);\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MakeCall;","import React, { Component } from 'react';\r\nimport { Grid, Cell, Tabs, Tab } from 'react-mdl'\r\nimport Logo from '../btwglogo.png';\r\nimport {Link} from 'react-router-dom';\r\nimport SendText from './sendtext';\r\nimport MakeCall from './makecall';\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {activeTab: 0 };\r\n\r\n    }\r\n\r\n\r\n    toggleCategories() {\r\n\r\n        if(this.state.activeTab === 0) {\r\n\r\n            return(\r\n\r\n                <div><MakeCall /></div>\r\n\r\n            );\r\n        }\r\n\r\n\r\n        if(this.state.activeTab === 1) {\r\n\r\n            return(\r\n\r\n                <div><div><SendText /></div></div>\r\n\r\n            );\r\n        }\r\n\r\n\r\n        if(this.state.activeTab === 2) {\r\n\r\n            return(\r\n\r\n                <div>This is tab 2</div>\r\n\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\nrender() {\r\n\r\n    \r\n\r\n    return(\r\n    \r\n    <div>\r\n        <div style ={{width: '100%', margin: 'auto'}}> \r\n        <Grid className=\"landing-grid\">\r\n            <Cell col={12}>\r\n                <center><img src={Logo} alt=\"logo\" className=\"logo\" /></center>\r\n            \r\n                <div className=\"banner-text\">\r\n                    <center><h1>Send a Phone Call or Text Message to Anyone From Anywhere.</h1></center>\r\n                </div>\r\n            </Cell>\r\n        </Grid>\r\n        </div>\r\n\r\n\r\n        <Tabs activeTab={this.state.active} onChange={(tabId) => this.setState({activeTab: tabId})} ripple>\r\n                    <Tab>Make a Call</Tab>\r\n                    <Tab>Send a Text</Tab>\r\n                    <Tab>See Open Chats</Tab>\r\n                </Tabs>\r\n                <section className=\"phone-content\">{this.toggleCategories()}</section> \r\n    </div>\r\n\r\n    );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Grid, Cell, List, ListItem, ListItemContent, ListItemAction, Icon } from 'react-mdl'\r\n\r\n\r\nclass Contacts extends Component {\r\n\r\nrender() {\r\n\r\n    return(\r\n\r\n        <div style ={{width: '100%', margin: 'auto'}}>\r\n            <Grid>\r\n                <Cell col={2}>\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemContent icon=\"person\">Brian Evans</ListItemContent>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"phone\" /></a>\r\n                    </ListItemAction>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"message\" /></a>\r\n                    </ListItemAction>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemContent icon=\"person\">Shane Shuford</ListItemContent>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"phone\" /></a>\r\n                    </ListItemAction>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"message\" /></a>\r\n                    </ListItemAction>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemContent icon=\"person\">Chris Blair</ListItemContent>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"phone\" /></a>\r\n                    </ListItemAction>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"message\" /></a>\r\n                    </ListItemAction>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemContent icon=\"person\">Kellie Shuford</ListItemContent>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"phone\" /></a>\r\n                    </ListItemAction><ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"message\" /></a>\r\n                    </ListItemAction>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemContent icon=\"person\">Emily Stringer</ListItemContent>\r\n                    <ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"phone\" /></a>\r\n                    </ListItemAction><ListItemAction>\r\n                        <a href=\"#\"><Icon name=\"message\" /></a>\r\n                    </ListItemAction>\r\n                </ListItem>\r\n            </List>\r\n             </Cell>\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Contacts;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Chats extends Component {\r\n\r\nrender() {\r\n\r\n    return(\r\n\r\n\r\n        <div>This is the chats page</div>\r\n    \r\n    \r\n    )\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    }\r\n\r\n\r\n} \r\n\r\nexport default Chats;","import React from 'react';\r\nimport { Switch, Route} from 'react-router-dom';\r\n\r\nimport Home from './home';\r\nimport Contacts from './contacts';\r\nimport Chats from './chats';\r\n\r\n\r\n\r\n\r\n\r\nconst Main = () => (\r\n\r\n<Switch>\r\n<Route exact path=\"/btwgphoneapp2/\" component={Home} />\r\n<Route path =\"/btwgphoneapp2/contacts\" component={Contacts} />\r\n<Route path =\"/btwgphoneapp2/chats\" component={Chats} />\r\n</Switch>\r\n\r\n\r\n)\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\nimport {Layout, Navigation, Drawer, Header, Content} from 'react-mdl';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    \n    <div className=\"demo-big-content\">\n    <Layout>\n       <Header className=\"header-color\" title=\"BTWG Phone App\" scroll>\n            <Navigation>\n                <Link className =\"link\" to=\"/btwgphoneapp2/\">Home</Link>\n                <Link className =\"link\" to=\"/btwgphoneapp2/contacts\">Contacts</Link>\n                <Link className =\"link\" to=\"/btwgphoneapp2/chats\">Chats</Link>\n            </Navigation>\n        </Header>\n        <Drawer className=\"menu-drawer\" title=\"BTWG Phone App\">\n            <Navigation>\n                <Link className =\"link\" to=\"/btwgphoneapp2/\">Home</Link>\n                <Link className =\"link\" to=\"/btwgphoneapp2/contacts\">Contacts</Link>\n                <Link className =\"link\" to=\"/btwgphoneapp2/chats\">Chats</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main />\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n /* global self */ \nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}